services:
  web:
    image: devibrahima/proevent:latest
    env_file: .env
    restart: always
    user: root
    command: >
      bash -c "mkdir -p /app/staticfiles && chown -R app:app /app/staticfiles && chmod -R 755 /app/staticfiles &&
              python manage.py makemigrations &&
              python manage.py migrate --noinput &&
              python manage.py collectstatic --noinput &&
              echo 'Starting Gunicorn...' &&
              su app -c 'gunicorn config.wsgi:application --bind 0.0.0.0:8080 --workers 2 --threads 2 --timeout 120'"
    depends_on:
      - db
      - redis
    volumes:
      - django_static:/app/staticfiles/
    networks:
      - backend
      - traefik-public
    deploy:
      resources:
        limits:
          memory: 350M
          cpus: "0.5"
    labels:
      - traefik.enable=true

      # HTTP route (no redirect internally)
      - traefik.http.routers.web-http.rule=Host(`proeventgn.com`)
      - traefik.http.routers.web-http.entrypoints=http
      - traefik.http.routers.web-http.middlewares=https-redirect

      # HTTPS route
      - traefik.http.routers.web-https.rule=Host(`proeventgn.com`)
      - traefik.http.routers.web-https.entrypoints=https
      - traefik.http.routers.web-https.tls=true
      - traefik.http.routers.web-https.tls.certresolver=le

      # Middlewares (for redirect)
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true

      # Service port
      - traefik.http.services.web.loadbalancer.server.port=8080
      - traefik.http.services.web.loadbalancer.passHostHeader=true

  celery:
    image: devibrahima/proevent:latest
    command: celery -A config worker -B -l info
    depends_on:
      - redis
      - db
    volumes:
      - django_static:/app/staticfiles/
    env_file: .env
    networks:
      - backend
    deploy:
      resources:
        limits:
          memory: 200M
          cpus: "0.3"
    restart: always

  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - backend
    deploy:
      resources:
        limits:
          memory: 250M
          cpus: "0.4"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7.0-alpine
    command:
      [
        "redis-server",
        "--port",
        "6380",
        "--save",
        "60",
        "1",
        "--loglevel",
        "warning",
        "--maxmemory",
        "100mb",
        "--maxmemory-policy",
        "allkeys-lru",
      ]
    networks:
      - backend
    deploy:
      resources:
        limits:
          memory: 120M
          cpus: "0.2"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6380", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  traefik:
    image: traefik:v2.10
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.middlewares.https-compress.compress=true
      - traefik.http.middlewares.app-http.headers.stsSeconds=31536000
      - traefik.http.middlewares.app-http.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.app-http.headers.stsPreload=true
      - traefik.http.middlewares.app-http.headers.forceSTSHeader=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_certificates:/certificates
      - /var/log/traefik:/var/log
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.le.acme.email=devibrahima88@gmail.com
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --accesslog
      - --entrypoints.http.http.redirections.entryPoint.to=https
      - --entrypoints.http.http.redirections.entryPoint.scheme=https
      - --log
      - --accesslog.filePath=/var/log/access.log
      - --api
    networks:
      - traefik-public
    deploy:
      resources:
        limits:
          memory: 80M
          cpus: "0.2"
    restart: always

networks:
  traefik-public:
    external: true
  backend:
    internal: true

volumes:
  django_static:
  postgres_data:
  traefik_certificates:
