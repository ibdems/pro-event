services:
  django:
    build:
      context: .
    container_name: django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - .env
    networks:
      - django_network

  redis:
    image: redis:7.0
    container_name: redis
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - django_network

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - django_network

  celery:
    build:
      context: .
    container_name: celery
    command: celery -A config worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - .env
    networks:
      - django_network

  flower:
    image: mher/flower:latest
    container_name: flower
    command: >
      flower --broker=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/
      --basic_auth=${FLOWER_USER}:${FLOWER_PASSWORD}
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq
    env_file:
      - .env
    networks:
      - django_network

networks:
  django_network:
    driver: bridge

volumes:
  redis_data:
    driver: local
