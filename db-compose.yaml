services:
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - backend
    deploy:
      resources:
        limits:
          memory: 250M
          cpus: "0.4"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7.0-alpine
    command:
      [
        "redis-server",
        "--port",
        "6380",
        "--save",
        "60",
        "1",
        "--loglevel",
        "warning",
        "--maxmemory",
        "100mb",
        "--maxmemory-policy",
        "allkeys-lru",
      ]
    networks:
      - backend
    deploy:
      resources:
        limits:
          memory: 120M
          cpus: "0.2"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6380", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:

networks:
  backend:
    external: true